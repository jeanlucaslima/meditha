---
import Container from './ui/Container.astro';
import Button from './ui/Button.astro';
import Badge from './ui/Badge.astro';
import Icon from './ui/Icon.astro';
import { COPY } from '../lib/abFlags';
import AnimatedLogo from './AnimatedLogo.astro';

export interface Props {
  variant?: 'A' | 'B';
}

const { variant = 'A' } = Astro.props;

// Default text for server-side rendering
const defaultH1Text = COPY.heroH1.A;
const defaultCtaText = COPY.heroCTA.A;

const discoverItems = [
  'O que está sabotando seu sono mesmo se você estiver exausta',
  'Como usar luz natural para reprogramar o corpo',
  'O passo a passo para dormir rápido sem depender de nada externo',
  'Como pessoas comuns estão dormindo bem em menos de 7 dias com o Método Lux'
];

const trustBadges = [
  'Baseado em ciência do sono',
  'Checklist prático e diário',
  'Garantia incondicional de 7 dias'
];
---

<section id="hero-section" class="relative bg-gradient-to-br from-base-100 to-accent-50 overflow-hidden">
  <!-- Background overlay -->
  <div class="absolute inset-0 bg-gradient-to-br from-primary/5 to-accent/10"></div>

  <!-- Hero content -->
  <Container class="relative z-10">
    <AnimatedLogo size="sm" padding={false} class="mt-6 mb-10" dropShadow={false} />

    <div class="flex flex-col lg:flex-row items-center justify-between min-h-[80vh] py-12 lg:py-20">

      <!-- Left content -->
      <div class="flex-1 lg:pr-12 text-center lg:text-left max-w-2xl mx-auto lg:mx-0">
        <h1 id="hero-h1" class="text-4xl md:text-5xl lg:text-6xl font-bold text-base-content leading-tight mb-6 text-balance">
          {defaultH1Text}
        </h1>

        <p class="text-lg md:text-xl text-base-content/80 mb-8 leading-relaxed text-balance">
          Um checklist simples, baseado na ciência do sono e no ritmo circadiano, para dormir profundamente e acordar com energia.
        </p>

        <div class="bg-white/70 backdrop-blur-sm border border-white/60 rounded-2xl p-6 mb-8 shadow-lg">
          <p class="text-sm font-semibold uppercase tracking-wider text-primary mb-4">
            Ao assistir ao vídeo, você vai descobrir:
          </p>
          <ul class="space-y-3 text-left">
            {discoverItems.map((item) => (
              <li class="flex items-start gap-3">
                <span class="mt-0.5 inline-flex h-7 w-7 items-center justify-center rounded-full bg-primary/10 text-primary">
                  <Icon name="check-circle" size="sm" class="text-primary" />
                </span>
                <span class="text-base-content/80 leading-relaxed">
                  {item}
                </span>
              </li>
            ))}
          </ul>
        </div>

        <!-- CTA Buttons -->
        <div class="flex flex-col sm:flex-row items-center sm:items-stretch gap-4 mb-8">
          <Button
            href="#oferta"
            variant="primary"
            size="lg"
            class="w-full sm:w-auto animate-bounce-subtle"
            data-event="durma_cta_click"
            data-position="hero"
            id="hero-cta"
          >
            {defaultCtaText}
          </Button>

          <Button
            href="#video"
            variant="outline"
            size="lg"
            class="w-full sm:w-auto border-primary text-primary hover:bg-primary/10"
            data-event="durma_cta_click"
            data-position="hero-video"
          >
            Assistir ao vídeo
          </Button>
        </div>

        <!-- Trust indicators -->
        <div class="flex flex-wrap justify-center lg:justify-start gap-4 items-center">
          {trustBadges.map((badge) => (
            <Badge variant="accent" class="whitespace-nowrap">
              {badge}
            </Badge>
          ))}
        </div>
      </div>

      <!-- Right content - Hero image -->
      <div class="flex-1 mt-12 lg:mt-0 max-w-lg mx-auto lg:max-w-none">
        <div class="relative">
          <!-- Placeholder for hero image -->
          <div class="relative aspect-[4/3] bg-gradient-to-br from-primary-100 to-accent-100 rounded-2xl shadow-2xl overflow-hidden">
            <div class="absolute inset-0 flex flex-col items-center justify-center text-center px-6">
              <div class="w-20 h-20 mb-4 bg-primary text-white rounded-full flex items-center justify-center shadow-lg">
                <Icon name="play" size="lg" class="text-white" />
              </div>
              <p class="text-lg font-semibold text-primary-700 mb-2">
                Aula gratuita com Elisa Yoshimura
              </p>
              <p class="text-base text-primary-700/80">
                Entenda o Método Lux em menos de 15 minutos e veja como o checklist guia você noite após noite.
              </p>
            </div>
            <div class="absolute inset-0 bg-gradient-to-t from-primary/20 to-transparent pointer-events-none"></div>
          </div>

          <!-- Floating elements -->
          <div class="absolute -top-4 -right-4 w-8 h-8 bg-accent rounded-full animate-bounce-subtle" style="animation-delay: 0.5s;"></div>
          <div class="absolute -bottom-4 -left-4 w-6 h-6 bg-secondary rounded-full animate-bounce-subtle" style="animation-delay: 1s;"></div>
        </div>
      </div>
    </div>
  </Container>
</section>

<script>
  import { trackSectionView } from '../lib/analytics';
  import { getUserVariant, COPY } from '../lib/abFlags';

  // Update A/B test content on client-side
  document.addEventListener('DOMContentLoaded', () => {
    const variant = getUserVariant();

    // Update H1 text
    const h1Element = document.getElementById('hero-h1');
    if (h1Element) {
      h1Element.textContent = COPY.heroH1[variant];
    }

    // Update CTA text
    const ctaElement = document.getElementById('hero-cta');
    if (ctaElement) {
      ctaElement.textContent = COPY.heroCTA[variant];
    }
  });

  // Track hero section view
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        trackSectionView('hero');
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.5 });

  const heroSection = document.getElementById('hero-section');
  if (heroSection) {
    observer.observe(heroSection);
  }
</script>
