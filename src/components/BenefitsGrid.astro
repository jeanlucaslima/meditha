---
import Container from './ui/Container.astro';
import Section from './ui/Section.astro';
import Grid from './ui/Grid.astro';
import Card from './ui/Card.astro';
import Icon from './ui/Icon.astro';

const benefits = [
  {
    icon: 'moon',
    title: 'A mente não desliga',
    description: 'Você deita exausta, mas o cérebro parece acelerar justamente na hora de dormir.'
  },
  {
    icon: 'heart',
    title: 'Acorda esgotada',
    description: 'Os dias começam com irritação e sensação de ressaca, mesmo depois de longas horas na cama.'
  },
  {
    icon: 'clock',
    title: 'Tentou de tudo',
    description: 'Sente medo de depender de remédios para sempre porque já tentou várias soluções sem ver resultado.'
  },
  {
    icon: 'check-circle',
    title: 'Quer um caminho guiado',
    description: 'Deseja dormir profundamente, mas não sabe por onde começar ou como manter uma rotina.'
  }
];
---

<Section bg="white" id="publico">
  <Container>
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-base-content mb-4">
        Para quem o Método Lux foi criado
      </h2>
      <p class="text-lg text-base-content/70 max-w-2xl mx-auto">
        Se alguma dessas situações descreve suas noites, o Checklist Durma Natural é o passo a passo que você estava buscando.
      </p>
    </div>

    <Grid cols={4} gap="lg">
      {benefits.map((benefit) => (
        <Card hover class="text-center h-full">
          <div class="flex flex-col items-center space-y-4">
            <div class="w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center flex-shrink-0">
              <Icon name={benefit.icon} size="lg" class="text-primary-600" />
            </div>
            <h3 class="text-xl font-semibold text-base-content">
              {benefit.title}
            </h3>
            <p class="text-base-content/70 leading-relaxed">
              {benefit.description}
            </p>
          </div>
        </Card>
      ))}
    </Grid>
  </Container>
</Section>

<script>
  import { trackSectionView } from '../lib/analytics';

  // Track benefits section view
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        trackSectionView('publico');
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.3 });

  const publicoSection = document.getElementById('publico');
  if (publicoSection) {
    observer.observe(publicoSection);
  }
</script>
